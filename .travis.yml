language: android
dist: trusty
env:
  global:
  - ANDROID_API=26
  - EMULATOR_API=22
  - ANDROID_BUILD_TOOLS=26.0.2
  - PROJECT_1=Scorekeeper
  - TESTNAME=DayNightTest
  
android:
  components:
  # Uncomment the lines below if you want to
  # use the latest revision of Android SDK Tools
  - tools
  - platform-tools

  # The BuildTools version used by your project
  - build-tools-$ANDROID_BUILD_TOOLS

  # The SDK version used to compile your project
  - android-$ANDROID_API
  - android-$EMULATOR_API

  # Additional components
  - extra-google-google_play_services
  - extra-google-m2repository
  - extra-android-m2repository

  # Specify at least one system image,
  # if you need to run emulator(s) during your tests
  #- sys-img-x86-android-$EMULATOR_API
  - sys-img-armeabi-v7a-android-$EMULATOR_API

  licenses:
  - android-sdk-preview-license-.+
  - android-sdk-license-.+
  - google-gdk-license-.+


before_install:
- export PROJECT_ROOT="${PWD}"
- chmod +x ${PROJECT_1}/gradlew
- chmod +x result_parser.py

before_script:
- echo no | android create avd --force -n test -t android-$EMULATOR_API --abi armeabi-v7a
- emulator -avd test -no-window &
- android-wait-for-emulator
- adb shell settings put global window_animation_scale 0 &
- adb shell settings put global transition_animation_scale 0 &
- adb shell settings put global animator_duration_scale 0 &
- adb shell input keyevent 82 &

script:
- cd ${PROJECT_ROOT}
- cd ${PROJECT_1} && ./gradlew connectedAndroidTest -Pandroid.testInstrumentationRunnerArguments.class=com.example.android.scorekeeper.${TESTNAME} --stacktrace
# catch return code immediately
- cat app/src/androidTest/java/com/example/android/scorekeeper/${TESTNAME}.java | grep 'perform(click())'; export R1=$?
- cat app/src/androidTest/java/com/example/android/scorekeeper/${TESTNAME}.java | grep 'check(matches(withText("Day Mode")))'; export R2=$?
- cat app/src/androidTest/java/com/example/android/scorekeeper/${TESTNAME}.java | grep 'check(matches(withText("Night Mode")))'; export R3=$?
# if any of the return codes is not zero, then build fail
- test $R1 -eq 0 && test $R2 -eq 0 && test $R3 -eq 0

after_script:
- cd ${PROJECT_ROOT}
- touch results.txt
# write result if all of the return codes are zero
- if [ $R1 -eq 0  ] && [ $R2 -eq 0  ] && [ $R3 -eq 0 ]; then ./result_parser.py ${PROJECT_ROOT}/${PROJECT_1}/app/build/reports/androidTests/connected/com.example.android.scorekeeper.${TESTNAME}.html >> results.txt; fi
- echo $(basename ${TRAVIS_REPO_SLUG}) ${TRAVIS_BRANCH} ${TRAVIS_COMMIT} $(git show -s --format=%ci ${TRAVIS_COMMIT} | cut -c 1-20) $(cat results.txt) > results.txt
- awk  '//{for(i=6;i<NF;i=i+2) print $i"\t"$(i+1)}' results.txt

